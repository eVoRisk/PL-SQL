-- 1.
CREATE TABLE salaryvar
	(
		EMPNO NUMBER(4) NOT NULL,
		OLDSAL NUMBER(7, 2) NULL,
		NEWSAL NUMBER(7, 2) NULL,
		CHTIME CHAR(10) NULL		
	);

CREATE OR REPLACE TRIGGER var_sal_tgr
BEFORE UPDATE OF sal ON emp
FOR EACH ROW
BEGIN
	IF MOD(TO_NUMBER(TO_CHAR(SYSDATE, 'MI')), 3) = 0 THEN
		RAISE_APPLICATION_ERROR(-20999, 'NU SE POATE FACE UPDATE IN ACEST MINUT');
	ELSE 
		INSERT INTO salaryvar
			VALUES(:OLD.empno, :OLD.sal, :NEW.sal, TO_CHAR(SYSDATE,'HH24:MI');
	END IF;
END;

-- 2.
CREATE OR REPLACE TRIGGER mutating_first_tgr
AFTER SERVERERROR ON SCHEMA
BEGIN
	IF(IS_SERVERERROR(04091)) THEN
		DBMS_OUTPUT.PUT_LINE('--------------');
		DBMS_OUTPUT.PUT_LINE('Mutating table');
		DBMS_OUTPUT.PUT_LINE('--------------');
		RAISE_APPLICATION_ERROR(-20998, 'TABELA SE POATE SCHIMBA');
	END IF;
END;

-- 3.
SELECT trigger_name
FROM USER_TRIGGERS;

DROP TRIGGER mutating_tgr;

-- 4.
CREATE OR REPLACE TRIGGER check_sal_tgr
BEFORE INSERT OR UPDATE OF sal ON emp
FOR EACH ROW
DECLARE
v_min_sal emp.sal%TYPE;
v_max_sal emp.sal%TYPE;
BEGIN
	SELECT MIN(sal), MAX(sal) INTO v_min_sal, v_max_sal
	FROM emp;
	
	IF :NEW.sal < v_min_sal OR :NEW.sal > v_max_sal THEN
		RAISE_APPLICATION_ERROR(-20997, 'OUT OF RANGE');
	END IF;
END;

UPDATE emp
SET sal = 1000
WHERE sal = 800;